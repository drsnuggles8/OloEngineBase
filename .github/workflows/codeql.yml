name: "CodeQL"
on:
  push:
    branches: [ master ]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

env:
  BUILD_TYPE: Release

jobs:
  analyze:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - language: cpp
            compiler: msvc
          - language: cpp
            compiler: llvm
          - language: csharp
            dotnet: '7.x'

    steps:
      - uses: actions/checkout@v4

      - name: Install Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install python dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          python -m pip install jinja2

      # C++ path
      - if: matrix.language == 'cpp'
        name: Install Vulkan SDK
        id: vulkan
        uses: humbletim/install-vulkan-sdk@v1.2
        with:
          version: latest
          cache: true

      - if: matrix.language == 'cpp'
        name: Configure CMake
        shell: bash
        run: |
          cmake -B build \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_PREFIX_PATH="$VULKAN_SDK" \
            -DCMAKE_MODULE_PATH="$VULKAN_SDK/Lib/cmake" \
            "${{ github.workspace }}"

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      # Build steps
      - name: Build C++ with CMake
        if: matrix.language == 'cpp'
        run: cmake --build "${{ github.workspace }}/build" --config ${{ env.BUILD_TYPE }}

      - name: Setup .NET SDK
        if: matrix.language == 'csharp'
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Build C# project
        if: matrix.language == 'csharp'
        run: dotnet build MySolution.sln --configuration ${{ env.BUILD_TYPE }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

