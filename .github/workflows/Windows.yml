name: Windows
on:
  push:
    branches: [ master ]
  pull_request:
    types: [opened, synchronize, reopened]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  
jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Ubuntu or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Python 3.10
      uses: actions/setup-python@v5
      with:
       python-version: '3.10'

    - name: Install python dependencies
      run: pip install jinja2
    
    - name: Install Vulkan SDK
      uses: humbletim/install-vulkan-sdk@v1.2
      with:
        version: latest
        cache: true

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build

    - name: Build with CMake
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Run tests with CTest
      working-directory: ${{github.workspace}}/build/OloEngine/tests
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -V

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: googletest_results_xml
        path: ${{runner.workspace}}/OloEngineBase/test_results/*.xml
        if-no-files-found: 'warn' 